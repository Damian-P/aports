Fix this error:

    = note: ld.lld: error: undefined symbol: __atomic_compare_exchange
            >>> referenced by isolate.cc
            >>>               isolate.o:(v8::internal::JSDispatchTable::TryAllocateAndInitializeEntry(v8::internal::ExternalEntityTable<v8::internal::JSDispatchEntry, 268435456ul>::SpaceWithBlackAllocationSupport*, unsigned short, v8::internal::Tagged<v8::internal::Code>)) in archive /builds/alpine/aports/community/deno/src/deno/target/release/deps/libv8-97fcce57012ba75f.rlib
            >>> referenced by wasm-objects.cc
            >>>               wasm-objects.o:(v8::internal::WasmDispatchTableData::~WasmDispatchTableData()) in archive /builds/alpine/aports/community/deno/src/deno/target/release/deps/libv8-97fcce57012ba75f.rlib
            >>> referenced by wasm-objects.cc
            >>>               wasm-objects.o:(v8::internal::WasmDispatchTableData::Remove(int, v8::internal::WasmCodePointer)) in archive /builds/alpine/aports/community/deno/src/deno/target/release/deps/libv8-97fcce57012ba75f.rlib
            >>> referenced 6 more times
            clang++: error: linker command failed with exit code 1 (use -v to see invocation)


--- a/vendor/v8/build.rs
+++ b/vendor/v8/build.rs
@@ -704,6 +704,9 @@
       println!("cargo:rustc-link-lib=dylib=msvcprt");
     }
   }
+
+  // XXX-Patched: v8 requires symbols provided by libatomic.so.
+  println!("cargo:rustc-link-lib=dylib=atomic");
 }
 
 fn print_prebuilt_src_binding_path() {
