Patch-Source: https://github.com/ruby/ruby/pull/12473
--
From 12f1da63a98681752fbccfec00d8f01e5222a7de Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Thu, 26 Dec 2024 17:09:10 +0800
Subject: [PATCH 1/2] Revert "Added LARCH_REG_FP to dump results"

This reverts commit 71b253cdf377acf04fb8bd98221f48d7087946de.

Signed-off-by: Mingcong Bai <jeffbai@aosc.io>
---
 vm_dump.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/vm_dump.c b/vm_dump.c
index 5873e529607246..2fb53d5276c2f9 100644
--- a/vm_dump.c
+++ b/vm_dump.c
@@ -1008,7 +1008,6 @@ rb_dump_machine_register(FILE *errout, const ucontext_t *ctx)
         dump_machine_register(mctx->__gregs[LARCH_REG_A5], "a5");
         dump_machine_register(mctx->__gregs[LARCH_REG_A6], "a6");
         dump_machine_register(mctx->__gregs[LARCH_REG_A7], "a7");
-        dump_machine_register(mctx->__gregs[LARCH_REG_FP], "fp");
         dump_machine_register(mctx->__gregs[LARCH_REG_S0], "s0");
         dump_machine_register(mctx->__gregs[LARCH_REG_S1], "s1");
         dump_machine_register(mctx->__gregs[LARCH_REG_S2], "s2");

From 94315857de8d396c47515ead75b2861c92da5a5d Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Thu, 26 Dec 2024 17:09:10 +0800
Subject: [PATCH 2/2] Revert "Use constants for register numbers"

This reverts commit a07bf6d5ffddff95eb2f83d5950b759fb4285d2e.

Signed-off-by: Mingcong Bai <jeffbai@aosc.io>
---
 vm_dump.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/vm_dump.c b/vm_dump.c
index 2fb53d5276c2f9..665d3c93f4feed 100644
--- a/vm_dump.c
+++ b/vm_dump.c
@@ -1001,22 +1001,22 @@ rb_dump_machine_register(FILE *errout, const ucontext_t *ctx)
 #   elif defined __loongarch64
         dump_machine_register(mctx->__gregs[LARCH_REG_SP], "sp");
         dump_machine_register(mctx->__gregs[LARCH_REG_A0], "a0");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A1], "a1");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A2], "a2");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A3], "a3");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A4], "a4");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A5], "a5");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A6], "a6");
-        dump_machine_register(mctx->__gregs[LARCH_REG_A7], "a7");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+1], "a1");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+2], "a2");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+3], "a3");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+4], "a4");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+5], "a5");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+6], "a6");
+        dump_machine_register(mctx->__gregs[LARCH_REG_A0+7], "a7");
         dump_machine_register(mctx->__gregs[LARCH_REG_S0], "s0");
         dump_machine_register(mctx->__gregs[LARCH_REG_S1], "s1");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S2], "s2");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S3], "s3");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S4], "s4");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S5], "s5");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S6], "s6");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S7], "s7");
-        dump_machine_register(mctx->__gregs[LARCH_REG_S8], "s8");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+2], "s2");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+3], "s3");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+4], "s4");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+5], "s5");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+6], "s6");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+7], "s7");
+        dump_machine_register(mctx->__gregs[LARCH_REG_S0+8], "s8");
 #   endif
     }
 # elif defined __APPLE__
